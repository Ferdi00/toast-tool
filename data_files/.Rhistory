gender_counts <- table(survey_response_managers$Gender)
percentages <- prop.table(gender_counts) * 100
par(bg=NA)
pie(gender_counts, labels = paste0(names(gender_counts), "\n  ", round(percentages, 1), "%"),
main = "Distribution of Gender Values", col = rainbow(length(gender_counts))) # questi colori sono da rivedere
dev.copy(png,'myplot2.png')
dev.off()
# Familiarità con i CS
cs_familiarities <- survey_response_managers[12]
cs_counts <- table(cs_familiarities)
percentages_cs <- prop.table(cs_counts) * 100
par(bg=NA)
pie(cs_counts, labels = paste0(names(cs_counts), "\n  ", round(percentages_cs, 1), "%"),
main = "Familiarità dei manager con i Community Smells", col = rainbow(length(cs_counts))) # questi colori sono da rivedere
dev.copy(png,'myplot3.png')
dev.off()
#Esperienza con i CS
cs_familiarities_experience <- survey_response_managers[13] %>%  mutate(CS_Experience = if_else(CS_Experience %in% c("No","NA",NA,"-","All good","No experience","N/A","None","n/a","m/a","I do not have any experience of this term","I'm not familiar with that concept.","Not heard of this concept!","I don't think I am familiar with this term",",","I am not too familiar with it.","N/a","No experience.","I haven't heard the term before"),"No", CS_Experience))
cs_familiarities_experience <- unique(cs_familiarities_experience)
print(cs_familiarities_experience)
nazionalita <- survey_response_managers[4]
frequenze <- table(nazionalita)
soglia_percentuale <- 1
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza delle figure manageriali", col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot4.png')
dev.off()
prolificID <- survey_response_managers[2]
nazionalita <- survey_response_managers[4]
frequenze <- table(nazionalita)
soglia_percentuale <- 1
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza delle figure manageriali", col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot4.png')
dev.off()
nazionalita <- survey_response_managers[4]
frequenze <- table(nazionalita)
soglia_percentuale <- 1
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza delle figure manageriali", col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot4.png')
dev.off()
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza delle figure manageriali", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot4.png')
dev.off()
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot5.png')
dev.off()
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(png,'myplot5.svg')
dev.off()
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(svg,'myplot5.svg')
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
col = rainbow(length(counts_country))) # questi colori sono da rivedere
dev.copy(svg,'myplot5.svg')
library(readxl)
library(dplyr)
column_types <- c("date", "text", "text","text", "text", "text", "numeric", "text", "numeric", "text", "text","text", "text")
column_names <- c("Timestamp_Risposta","Prolific_ID","Gender","Nationality","Role","Company_Size","Managing_Distributed_Teams_Familiarities","Years_of_experience_Managing","Evaluation_Team_Management","Team_Size","PMI_or_others_Certifications","CS_Familiarities", "CS_Experience")
survey_response <- read_excel("Selection Survey for Community Smells Recognition - Risposte.xlsx",col_types = column_types, col_names = column_names, skip=1)
library(readxl)
library(dplyr)
column_types <- c("date", "text", "text","text", "text", "text", "numeric", "text", "numeric", "text", "text","text", "text")
column_names <- c("Timestamp_Risposta","Prolific_ID","Gender","Nationality","Role","Company_Size","Managing_Distributed_Teams_Familiarities","Years_of_experience_Managing","Evaluation_Team_Management","Team_Size","PMI_or_others_Certifications","CS_Familiarities", "CS_Experience")
survey_response <- read_excel("Selection Survey for Community Smells Recognition - Risposte.xlsx",col_types = column_types, col_names = column_names, skip=1)
# recupero tutti i differenti gender inseriti
unique_genders <- unique(survey_response[3])
survey_response[3]<-survey_response[3] %>% mutate(Gender = if_else(Gender %in% c("male","man","M","Masculine","MALE","Man"),"Male", Gender))
survey_response[3]<-survey_response[3] %>% mutate(Gender = if_else(Gender %in% c("female","Woman","woman","Women","F"),"Female", Gender))
survey_response[3]<-survey_response[3] %>% mutate(Gender = if_else(Gender %in% c("Genderless","Non Binary"),"Others", Gender))
# Colcolo della distribuzione dei generi
gender_counts <- table(survey_response$Gender)
percentages <- prop.table(gender_counts) * 100
pie(gender_counts, labels = paste0(names(gender_counts), "\n  ", round(percentages, 1), "%"),
main = "Distribution of Gender Values", col = rainbow(length(gender_counts))) # questi colori sono da rivedere
nazionalita <- survey_response[4]
frequenze <- table(nazionalita)
soglia_percentuale <- 1
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
library(ggplot2)
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
# Convert to data frame for ggplot
data_for_plot <- data.frame(Country = names(percentages_country), Percentage = percentages_country)
# Load ggplot2
library(ggplot2)
# Create pie chart
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_viridis_d() + # This uses a different color palette; change as needed
labs(title = "Nazione di provenienza del campione") +
geom_text(aes(label = paste0(Country, " ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5)) # Adjust text labels
View(data_for_plot)
# Create pie chart
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_viridis_d() + # This uses a different color palette; change as needed
labs(title = "Nazione di provenienza del campione") +
geom_text(aes(label = paste0(Country, " ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5)) # Adjust text labels
# Assuming country_updated is a vector of countries
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
# Convert to data frame for ggplot
data_for_plot <- data.frame(Country = names(counts_country),
Percentage = as.numeric(percentages_country))
# Load ggplot2
library(ggplot2)
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_text(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
library(ggrepel)
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
+
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3) # Adjust text size as needed +
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3)+ # Adjust text size as needed
geom_text(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3) # Adjust text size as needed
geom_text(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3)+ # Adjust text size as needed
geom_text(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 1.5),
direction = "y",
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 5.5),
direction = "y",
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 1.5,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 1.5,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 0.5, # Adjust this value as needed to move labels outside
nudge_x = 0.5,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
#nudge_y = 0.5, # Adjust this value as needed to move labels outside
#nudge_x = 0.5,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 0.5
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 0.5,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 0,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 1.5, # Adjust this value as needed to move labels outside
nudge_x = 0.8,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 2.5, # Adjust this value as needed to move labels outside
nudge_x = 0.8,
size = 3) # Adjust text size as needed
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 5, # Adjust this value as needed to move labels outside
nudge_x = 0.8,
size = 3) # Adjust text size as needed
geom_text(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create pie chart using ggplot
ggplot(data_for_plot, aes(x = "", y = Percentage, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(title = "Nazione di provenienza del campione", x = NULL, y = NULL, fill = "Country") +
theme_void() +
geom_label_repel(aes(label = paste0(Country, ": ", round(Percentage, 1), "%")),
#position = position_stack(vjust = 0.5),
direction = "y",
nudge_y = 5, # Adjust this value as needed to move labels outside
nudge_x = 0.8,
size = 1) # Adjust text size as needed
nazionalita <- survey_response[4]
frequenze <- table(nazionalita)
soglia_percentuale <- 1
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
soglia_percentuale <- 0.5
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
soglia_percentuale <- 0.6
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
soglia_percentuale <- 0.8
other_nationalities <- names(frequenze[frequenze / sum(frequenze) * 100 < soglia_percentuale])
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- table(country_updated)
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
View(country_updated)
View(data_for_plot)
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
country_updated <- nazionalita %>% mutate ( Nationality = ifelse(Nationality %in% other_nationalities, "Others", Nationality))
counts_country <- sample(table(country_updated))
percentages_country <- prop.table(counts_country) * 100
colors <- rainbow(length(percentages_country))
par(bg=NA)
pie(counts_country, labels = paste0(names(counts_country), "  ",round(percentages_country, 1), "%"),
main = "Nazione di provenienza del campione", col = rainbow(length(counts_country))) # questi colori sono da rivedere
